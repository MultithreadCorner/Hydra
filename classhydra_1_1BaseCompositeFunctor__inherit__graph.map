<map id="hydra::BaseCompositeFunctor&lt; Composite, FunctorList, Signature &gt;" name="hydra::BaseCompositeFunctor&lt; Composite, FunctorList, Signature &gt;">
<area shape="rect" id="node2" href="$namespacehydra.html" title="{hydra::BaseCompositeFunctor\l\&lt; Minus\&lt; F1, F2 \&gt;, hydra\l::thrust::tuple\&lt; F1, F2 \&gt;\l, detail::merged_tuple\&lt; hydra\l::thrust::tuple\&lt; std::common\l_type\&lt; F1::return_type, F2::return\l_type \&gt;::type \&gt;, detail::stripped\l_tuple\&lt; detail::merged_tuple\&lt; F1::\largument_type, F2::argument_type \&gt;\l::type \&gt;::type \&gt;::type \&gt;\n||}" alt="" coords="5,329,243,538"/>
<area shape="rect" id="node4" href="$namespacehydra.html" title="{hydra::BaseCompositeFunctor\l\&lt; Multiply\&lt; F1, F2, Fs...\l \&gt;, hydra::thrust::tuple\&lt;\l F1, F2, Fs... \&gt;, detail::merged\l_tuple\&lt; hydra::thrust::tuple\&lt; std\l::common_type\&lt; F1::return_type, F2\l::return_type, Fs::return_type... \&gt;\l::type \&gt;, detail::stripped_tuple\&lt; detail\l::merged_tuple\&lt; F1::argument_type, F2::\largument_type, Fs::argument_type ... \&gt;::\ltype \&gt;::type \&gt;::type \&gt;\n||}" alt="" coords="267,321,528,545"/>
<area shape="rect" id="node6" href="$namespacehydra.html" title="{hydra::BaseCompositeFunctor\l\&lt; ConvolutionFunctor\&lt; Functor,\l Kernel, detail::BackendPolicy\l\&lt; BACKEND \&gt;, detail::FFTPolicy\l\&lt; std::common_type\&lt; Functor::return\l_type, Kernel::return_type \&gt;::type,\l FFT \&gt;, ArgType \&gt;, hydra::thrust::tuple\l\&lt; Functor, Kernel \&gt;, detail::convolution\l::_traits\&lt; hydra::thrust::tuple\&lt; Functor,\l Kernel \&gt;, ArgType \&gt;::signature \&gt;\n||}" alt="" coords="553,329,799,538"/>
<area shape="rect" id="node8" href="$namespacehydra.html" title="{hydra::BaseCompositeFunctor\l\&lt; Divide\&lt; F1, F2 \&gt;, hydra\l::thrust::tuple\&lt; F1, F2 \&gt;,\l detail::merged_tuple\&lt; hydra\l::thrust::tuple\&lt; decltype(std\l::declval\&lt; F1::return_type \&gt;()\l/std::declval\&lt; F2::return_type\l \&gt;())\&gt;, detail::stripped_tuple\&lt;\l detail::merged_tuple\&lt; F1::argument\l_type, F2::argument_type \&gt;::type \&gt;\l::type \&gt;::type \&gt;\n||}" alt="" coords="824,321,1056,545"/>
<area shape="rect" id="node10" href="$namespacehydra.html" title="{hydra::BaseCompositeFunctor\l\&lt; Sum\&lt; F1, F2, Fs... \&gt;,\l hydra::thrust::tuple\&lt; F1,\l F2, Fs... \&gt;, detail::merged\l_tuple\&lt; hydra::thrust::tuple\l\&lt; std::common_type\&lt; F1::return\l_type, F2::return_type, Fs::return\l_type... \&gt;::type \&gt;, detail::stripped\l_tuple\&lt; detail::merged_tuple\&lt; F1::argument\l_type, F2::argument_type, Fs::argument_type\l ... \&gt;::type \&gt;::type \&gt;::type \&gt;\n||}" alt="" coords="1080,321,1368,545"/>
<area shape="rect" id="node12" href="$namespacehydra.html" title="{hydra::BaseCompositeFunctor\l\&lt; Compose\&lt; F0, F1, Fs...\l \&gt;, hydra::thrust::tuple\l\&lt; F0, F1, Fs... \&gt;, detail\l::merged_tuple\&lt; hydra::thrust\l::tuple\&lt; F0::return_type \&gt;, detail\l::stripped_tuple\&lt; detail::merged\l_tuple\&lt; F1::argument_type, Fs::argument\l_type ... \&gt;::type \&gt;::type \&gt;::type \&gt;\n||}" alt="" coords="1393,336,1655,531"/>
<area shape="rect" id="node3" href="$classhydra_1_1Minus.html" title="{hydra::Minus\&lt; F1, F2 \&gt;\n||+ Minus()\l+ Minus()\l+ Minus()\l+ Evaluate()\l+ operator=()\l}" alt="" coords="45,683,203,819"/>
<area shape="rect" id="node5" href="$classhydra_1_1Multiply.html" title="{hydra::Multiply\&lt; F1,\l F2, Fs \&gt;\n||+ Multiply()\l+ Multiply()\l+ Multiply()\l+ Evaluate()\l+ operator=()\l}" alt="" coords="328,675,467,826"/>
<area shape="rect" id="node7" href="$classhydra_1_1ConvolutionFunctor_3_01Functor_00_01Kernel_00_01detail_1_1BackendPolicy_3_01BACKENb3b342af36a60e84be1085f455499e1d.html" title="{hydra::ConvolutionFunctor\l\&lt; Functor, Kernel, detail\l::BackendPolicy\&lt; BACKEND\l \&gt;, detail::FFTPolicy\&lt; typename\l std::common_type\&lt; typename Functor\l::return_type, typename Kernel::return\l_type \&gt;::type, FFT \&gt;, ArgType \&gt;\n||+ ConvolutionFunctor()\l+ ConvolutionFunctor()\l+ ConvolutionFunctor()\l+ ~ConvolutionFunctor()\l+ Dispose()\l+ Evaluate()\l+ GetDeviceData()\l+ GetFFTData()\l+ GetHostData()\l+ GetMax()\land 8 more...\l}" alt="" coords="551,595,801,907"/>
<area shape="rect" id="node9" href="$classhydra_1_1Divide.html" title="{hydra::Divide\&lt; F1, F2 \&gt;\n||+ Divide()\l+ Divide()\l+ Divide()\l+ Evaluate()\l+ operator=()\l}" alt="" coords="859,683,1021,819"/>
<area shape="rect" id="node11" href="$classhydra_1_1Sum.html" title="{hydra::Sum\&lt; F1, F2,\l Fs \&gt;\n||+ Sum()\l+ Sum()\l+ Sum()\l+ Evaluate()\l+ operator=()\l}" alt="" coords="1153,675,1295,826"/>
<area shape="rect" id="node13" href="$classhydra_1_1Compose.html" title="{hydra::Compose\&lt; F0,\l F1, Fs \&gt;\n||+ Compose()\l+ Compose()\l+ Compose()\l+ Evaluate()\l+ operator=()\l}" alt="" coords="1449,675,1599,826"/>
</map>
