var searchData=
[
  ['uniform',['uniform',['../structhydra_1_1RngBase.html#ae84f2b78260efa34a79fa98e836bbc61',1,'hydra::RngBase']]],
  ['uniformshape',['UniformShape',['../group__common__functions.html#a914f49a3e2627c2e286e4027fc8e8af1',1,'hydra::UniformShape::UniformShape()=delete'],['../group__common__functions.html#a5af19a93318c76b4d7403aaff09bb793',1,'hydra::UniformShape::UniformShape(Parameter const &amp;A, Parameter const &amp;B)'],['../group__common__functions.html#ad09b582434c7b912129ee75a742289e2',1,'hydra::UniformShape::UniformShape(UniformShape&lt; ArgType &gt; const &amp;other)']]],
  ['unweight',['Unweight',['../group__phsp.html#a776b156095dc24b9b8b95759c6b45d92',1,'hydra::Decays&lt; hydra::tuple&lt; Particles... &gt;, hydra::detail::BackendPolicy&lt; Backend &gt; &gt;::Unweight(size_t seed=0x180ec6d33cfd0aba)'],['../group__phsp.html#a20960311191a2cfba846ca3da49ced42',1,'hydra::Decays&lt; hydra::tuple&lt; Particles... &gt;, hydra::detail::BackendPolicy&lt; Backend &gt; &gt;::Unweight(Functor const &amp;functor, double weight=-1.0, size_t seed=0x39abdc4529b1661c)'],['../group__random.html#gaf3cd03f6c91a7dea855ed430a12618f2',1,'hydra::unweight(detail::BackendPolicy&lt; BACKEND &gt; const &amp;policy, IteratorData data_begin, IteratorData data_end, IteratorWeight weights_begin)'],['../group__random.html#gaae678e8eaa0ad279c9f5ce8f5714166a',1,'hydra::unweight(IteratorData data_begin, IteratorData data_end, IteratorData weights_begin)'],['../group__random.html#ga407c06a1f6a242e5f98150e95d733baf',1,'hydra::unweight(hydra::detail::BackendPolicy&lt; BACKEND &gt; const  &amp;policy, IterableData &amp;&amp;data, IterableWeight &amp;&amp;weights)'],['../namespacehydra.html#af9d0311b873d73e2980a800d69e9ff05',1,'hydra::unweight(IterableData &amp;&amp;data, IterableWeight &amp;&amp;weights)'],['../group__random.html#gadb651e93b792358b563e8ac20fddd028',1,'hydra::unweight(hydra::detail::BackendPolicy&lt; BACKEND &gt; const  &amp;policy, Iterator begin, Iterator end, Functor const  &amp;functor)'],['../group__random.html#ga9a7d4b333528d673d75fe20cfb86f03e',1,'hydra::unweight(Iterator begin, Iterator end, Functor const  &amp;functor)'],['../group__random.html#ga3b91ce799b5efa01c16593d023b9b355',1,'hydra::unweight(hydra::detail::BackendPolicy&lt; BACKEND &gt; const  &amp;policy, Iterable &amp;&amp;iterable, Functor const  &amp;functor)'],['../group__random.html#gaef41f0eac7bce40769634467f2ae3347',1,'hydra::unweight(Iterable &amp;&amp;iterable, Functor const &amp;functor)'],['../group__random.html#gaf3cd03f6c91a7dea855ed430a12618f2',1,'hydra::unweight(detail::BackendPolicy&lt; BACKEND &gt; const &amp;policy, IteratorData data_begin, IteratorData data_end, IteratorWeight weights_begin)'],['../group__random.html#gaae678e8eaa0ad279c9f5ce8f5714166a',1,'hydra::unweight(IteratorData data_begin, IteratorData data_end, IteratorData weights_begin)'],['../group__random.html#gad7a85d3fb6639d4e9414d2fbd65c76e9',1,'hydra::unweight(IterableData data, IterableWeight weights)'],['../group__random.html#gaef41f0eac7bce40769634467f2ae3347',1,'hydra::unweight(Iterable &amp;&amp;iterable, Functor const &amp;functor)']]],
  ['up',['Up',['../group__fit.html#adba1f8a685dd94cfa70eb60b5c0ad88c',1,'hydra::FCN&lt; Estimator&lt; PDF, Iterator, Iterators... &gt;, true &gt;::Up()'],['../group__fit.html#aeaaa75c8f1544a3988685ff20295a2cb',1,'hydra::FCN&lt; Estimator&lt; PDF, Iterator &gt;, true &gt;::Up()'],['../group__fit.html#a4478fabdff37facbe925adac5ac3791e',1,'hydra::FCN&lt; hydra_thrust::tuple&lt; FCN&lt; ESTIMATORS &gt;... &gt;, false &gt;::Up()']]],
  ['update',['Update',['../classhydra_1_1detail_1_1ParametersCompositeFunctor.html#aee13beca1cccde78714c4364a2b67c68',1,'hydra::detail::ParametersCompositeFunctor::Update()'],['../classhydra_1_1ConvolutionFunctor_3_01Functor_00_01Kernel_00_01detail_1_1BackendPolicy_3_01BACKENb3b342af36a60e84be1085f455499e1d.html#a61a32de6bbf6e5e9178be68a0ce1c6b5',1,'hydra::ConvolutionFunctor&lt; Functor, Kernel, detail::BackendPolicy&lt; BACKEND &gt;, detail::FFTPolicy&lt; typename std::common_type&lt; typename Functor::return_type, typename Kernel::return_type &gt;::type, FFT &gt;, ArgType &gt;::Update()'],['../classhydra_1_1ConvolutionFunctor_3_01Functor_00_01Kernel_00_01detail_1_1FFTPolicy_3_01typename_03c6b7363172ee2275ee995c834cc1e03.html#a42844cbf2fb6a857ba1e1f00b5c291b9',1,'hydra::ConvolutionFunctor&lt; Functor, Kernel, detail::FFTPolicy&lt; typename std::common_type&lt; typename Functor::return_type, typename Kernel::return_type &gt;::type, FFT &gt;, ArgIndex &gt;::Update()']]],
  ['updateparameterlimits',['UpdateParameterLimits',['../group__fit.html#a1c811d0b261dc8b6e73996e9a84903ab',1,'hydra::UserParameters']]],
  ['updateparameters',['UpdateParameters',['../group__fit.html#a71455f390ac736ed22332ae528be687b',1,'hydra::UserParameters']]],
  ['upper_5fpower_5fof_5ftwo',['upper_power_of_two',['../namespacehydra_1_1detail_1_1convolution.html#a0dc0e6881533795ea44ac055e4741a1a',1,'hydra::detail::convolution']]],
  ['userparameters',['UserParameters',['../group__fit.html#ab5c5fd6bdeb6f4daba3a3bf49d1cf7f5',1,'hydra::UserParameters::UserParameters()'],['../group__fit.html#ad801fc9e5287c209b3d8bd1c55fa43a0',1,'hydra::UserParameters::UserParameters(UserParameters const &amp;other)']]]
];
